Algorithm Time complexity analysis:

// O(n^2):
for(int i=0; i<n; i++)
	for(int j=0; j<n; j++)

// O(n):
for(int i=0; i<n; i++)

// O(log2(n)) => O(log(n)):
for(int i = n; i>0; i /= 2)

// foreg: 500 250 125 62 31 15 7 3 1
// Programs like binary search can give you such efficiency.
// but data should be sorted, which takes O(n*log(n))



